<?php

namespace NeuronAI\Tools;

use JsonSerializable;

interface ToolInterface extends JsonSerializable
{
    /**
     * Add a Property with a name, type, description, and optional required constraint.
     */
    public function addProperty(ToolPropertyInterface $property): ToolInterface;

    /**
     * Execute the tool's logic with input parameters.
     */
    public function execute(): void;

    /**
     * The call identifier generated by the LLM.
     */
    public function getCallId(): ?string;

    /**
     * Get a description of the tool's functionality.
     */
    public function getDescription(): string;

    /**
     * Get the input arguments of the function call.
     */
    public function getInputs(): array;

    /**
     * Get the unique name of the tool.
     */
    public function getName(): string;

    /**
     * Get the Properties schema.
     */
    public function getProperties(): array;

    /**
     * Names of the required properties.
     *
     * @return array<string>
     */
    public function getRequiredProperties(): array;

    public function getResult(): mixed;

    public function setCallId(string $callId): ToolInterface;

    /**
     * Define the code to be executed.
     */
    public function setCallable(callable $callback): ToolInterface;

    /**
     * Get the input arguments of the function call.
     */
    public function setInputs(array $inputs): ToolInterface;
}
